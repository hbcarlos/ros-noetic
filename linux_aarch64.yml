pool:
  name: Default
  demands:
  - Agent.OS -equals linux
  - Agent.OSArchitecture -equals ARM64
trigger:
- buildbranch_linux_aarch64
pr: none
stages:
- stage: stage_0
  jobs:
  - job: stage_0_job_0
    steps:
    - script: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
      env:
        ANACONDA_API_TOKEN: $(ANACONDA_API_TOKEN)
        CURRENT_RECIPES: ros-distro-mutex ros-noetic-gazebo-dev ros-noetic-gazebo-ros
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      displayName: Build ros-distro-mutex ros-noetic-gazebo-dev ros-noetic-gazebo-ros
- stage: stage_1
  jobs:
  - job: stage_1_job_0
    steps:
    - script: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
      env:
        ANACONDA_API_TOKEN: $(ANACONDA_API_TOKEN)
        CURRENT_RECIPES: ros-noetic-hector-gazebo-plugins ros-noetic-gazebo-ros-control
          ros-noetic-gazebo-plugins
        DOCKER_IMAGE: condaforge/linux-anvil-aarch64
      displayName: Build ros-noetic-hector-gazebo-plugins ros-noetic-gazebo-ros-control
        ros-noetic-gazebo-plugins
